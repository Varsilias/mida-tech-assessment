name: Deploy to AWS

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  create-docker-image:
    name: Build and push Docker image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Create .env file from Secret
        id: import-env
        run: |
          echo "${{ secrets.PROD_ENV_FILE }}" >> .env.production
          echo "${{ secrets.TEST_ENV_FILE }}" >> .env

          echo "ls -a ."
          ls -a .

          echo "ls -a ${{ github.workspace }}"
          ls -a ${{ github.workspace }}
        shell: bash
      - uses: cardinalby/export-env-action@v2
        with:
          mask: false
          envFile: ".env"

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          #   ECR_REGISTRY_ALIAS: <ecr-alias>
          ECR_REPOSITORY: mida-core-service # assuming our ECR Repository name is "mida-core-service"
          IMAGE_TAG: mida-core-service
        run: |
          docker build -t $IMAGE_TAG .
          docker tag $IMAGE_TAG:latest $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$IMAGE_TAG:latest
          docker push $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:latest
